{"ast":null,"code":"var _jsxFileName = \"/Users/ogawaranaoki/Study/domain-starter-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'OTO-SUN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst App = () => {\n  _s();\n  // ユーザーのウォレットアドレスをstate管理しています\n  const [currentAccount, setCurrentAccount] = useState();\n\n  // connectWallet 関数を定義\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\n      // アカウントへのアクセスを要求するメソッドを使用します。\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Metamask を一度認証すれば Connected とコンソールに表示されます。\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // ウォレットの接続を確認します。\n  const checkIfWalletIsConnected = async () => {\n    // window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    // ユーザーのウォレットアドレスをリクエストします。\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    // ユーザーが複数のアカウントを持っている場合もあります、最初のアドレスを使います\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  // レンダリング関数です。まだ Connect されていない場合。\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"Ninja donut gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n\n  // ページがリロードされると呼び出されます。\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"VK9+XnBcl8xjHxLAig35nAKzHSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","renderNotConnectedContainer"],"sources":["/Users/ogawaranaoki/Study/domain-starter-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n\n// Constants\nconst TWITTER_HANDLE = 'OTO-SUN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n\t// ユーザーのウォレットアドレスをstate管理しています\n\tconst [currentAccount, setCurrentAccount] = useState();\n\n\t// connectWallet 関数を定義\n\tconst connectWallet = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (!ethereum) {\n\t\t\t\talert(\"Get MetaMask -> https://metamask.io/\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// アカウントへのアクセスを要求するメソッドを使用します。\n\t\t\tconst accounts = await ethereum.request({\n\t\t\t\tmethod: \"eth_requestAccounts\",\n\t\t\t});\n\n\t\t\t// Metamask を一度認証すれば Connected とコンソールに表示されます。\n\t\t\tconsole.log(\"Connected\", accounts[0]);\n\t\t\tsetCurrentAccount(accounts[0]);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\t// ウォレットの接続を確認します。\n\tconst checkIfWalletIsConnected = async () => {\n\t\t// window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\tconsole.log(\"Make sure you have MetaMask!\");\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log(\"We have the ethereum object\", ethereum);\n\t\t}\n\n\t\t// ユーザーのウォレットアドレスをリクエストします。\n\t\tconst accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n\t\t// ユーザーが複数のアカウントを持っている場合もあります、最初のアドレスを使います\n\t\tif (accounts.length !== 0) {\n\t\t\tconst account = accounts[0];\n\t\t\tconsole.log(\"Found an authorized account:\", account);\n\t\t\tsetCurrentAccount(account);\n\t\t} else {\n\t\t\tconsole.log(\"No authorized account found\");\n\t\t}\n\t};\n\n\t// レンダリング関数です。まだ Connect されていない場合。\n\tconst renderNotConnectedContainer = () => (\n\t\t<div className=\"connect-wallet-container\">\n\t\t\t<img\n\t\t\t\tsrc=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n\t\t\t\talt=\"Ninja donut gif\"\n\t\t\t/>\n\t\t\t{/* Connect Wallet ボタンが押されたときのみ connectWallet関数 を呼び出します。 */}\n\t\t\t<button\n\t\t\t\tonClick={connectWallet}\n\t\t\t\tclassName=\"cta-button connect-wallet-button\"\n\t\t\t>\n\t\t\t\tConnect Wallet\n\t\t\t</button>\n\t\t</div>\n\t);\n\n\t// ページがリロードされると呼び出されます。\n\tuseEffect(() => {\n\t\tcheckIfWalletIsConnected();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<p className=\"title\">🐱‍👤 Ninja Name Service</p>\n\t\t\t\t\t\t\t<p className=\"subtitle\">Your immortal API on the blockchain!</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\n\t\t\t\t{/* currentAccount が存在しない場合、Connect Wallet ボタンを表示します*/}\n\t\t\t\t{!currentAccount && renderNotConnectedContainer()}\n\n\t\t\t\t<div className=\"footer-container\">\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{`built with @${TWITTER_HANDLE}`}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default App;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}